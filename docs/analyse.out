Major Components:
{
  "Assistants": {
    "description": "Build Assistants that can call models and use tools.",
    "actions": [
      "listAssistants",
      "createAssistant",
      "getAssistant",
      "modifyAssistant",
      "deleteAssistant",
      "createThread",
      "getThread",
      "modifyThread",
      "deleteThread",
      "listMessages",
      "createMessage",
      "getMessage",
      "modifyMessage",
      "createThreadAndRun",
      "listRuns",
      "createRun",
      "getRun",
      "modifyRun",
      "submitToolOuputsToRun",
      "cancelRun",
      "listRunSteps",
      "getRunStep",
      "listAssistantFiles",
      "createAssistantFile",
      "getAssistantFile",
      "deleteAssistantFile",
      "listMessageFiles",
      "getMessageFile"
    ]
  },
  "Audio": {
    "description": "Learn how to turn audio into text or text into audio.",
    "actions": [
      "createSpeech",
      "createTranscription",
      "createTranslation"
    ]
  },
  "Chat": {
    "description": "Given a list of messages comprising a conversation, the model will return a response.",
    "actions": [
      "createChatCompletion"
    ]
  },
  "Completions": {
    "description": "Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.",
    "actions": [
      "createCompletion"
    ]
  },
  "Embeddings": {
    "description": "Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.",
    "actions": [
      "createEmbedding"
    ]
  },
  "Fine-tuning": {
    "description": "Manage fine-tuning jobs to tailor a model to your specific training data.",
    "actions": [
      "createFineTuningJob",
      "listPaginatedFineTuningJobs",
      "retrieveFineTuningJob",
      "listFineTuningEvents",
      "cancelFineTuningJob"
    ]
  },
  "Files": {
    "description": "Files are used to upload documents that can be used with features like Assistants and Fine-tuning.",
    "actions": [
      "listFiles",
      "createFile",
      "deleteFile",
      "retrieveFile",
      "downloadFile"
    ]
  },
  "Images": {
    "description": "Given a prompt and/or an input image, the model will generate a new image.",
    "actions": [
      "createImage",
      "createImageEdit",
      "createImageVariation"
    ]
  },
  "Models": {
    "description": "List and describe the various models available in the API.",
    "actions": [
      "listModels",
      "retrieveModel",
      "deleteModel"
    ]
  },
  "Moderations": {
    "description": "Given a input text, outputs if the model classifies it as violating OpenAI's content policy.",
    "actions": [
      "createModeration"
    ]
  },
  "Fine-tunes": {
    "description": "Manage legacy fine-tuning jobs to tailor a model to your specific training data.",
    "actions": [
      "createFineTune",
      "listFineTunes",
      "retrieveFineTune",
      "cancelFineTune",
      "listFineTuneEvents"
    ]
  },
  "Edits": {
    "description": "Given a prompt and an instruction, the model will return an edited version of the prompt.",
    "actions": [
      "createEdit"
    ]
  }
}

Actions:
{
  "createChatCompletion": {
    "method": "POST",
    "path": "/chat/completions",
    "summary": "Creates a model response for the given chat conversation."
  },
  "createCompletion": {
    "method": "POST",
    "path": "/completions",
    "summary": "Creates a completion for the provided prompt and parameters."
  },
  "createEdit": {
    "method": "POST",
    "path": "/edits",
    "summary": "Creates a new edit for the provided input, instruction, and parameters."
  },
  "createImage": {
    "method": "POST",
    "path": "/images/generations",
    "summary": "Creates an image given a prompt."
  },
  "createImageEdit": {
    "method": "POST",
    "path": "/images/edits",
    "summary": "Creates an edited or extended image given an original image and a prompt."
  },
  "createImageVariation": {
    "method": "POST",
    "path": "/images/variations",
    "summary": "Creates a variation of a given image."
  },
  "createEmbedding": {
    "method": "POST",
    "path": "/embeddings",
    "summary": "Creates an embedding vector representing the input text."
  },
  "createSpeech": {
    "method": "POST",
    "path": "/audio/speech",
    "summary": "Generates audio from the input text."
  },
  "createTranscription": {
    "method": "POST",
    "path": "/audio/transcriptions",
    "summary": "Transcribes audio into the input language."
  },
  "createTranslation": {
    "method": "POST",
    "path": "/audio/translations",
    "summary": "Translates audio into English."
  },
  "listFiles": {
    "method": "GET",
    "path": "/files",
    "summary": "Returns a list of files that belong to the user's organization."
  },
  "createFile": {
    "method": "POST",
    "path": "/files",
    "summary": "Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.\n\nThe size of individual files can be a maximum of 512 MB. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports `.jsonl` files.\n\nPlease [contact us](https://help.openai.com/) if you need to increase these storage limits.\n"
  },
  "deleteFile": {
    "method": "DELETE",
    "path": "/files/{file_id}",
    "summary": "Delete a file."
  },
  "retrieveFile": {
    "method": "GET",
    "path": "/files/{file_id}",
    "summary": "Returns information about a specific file."
  },
  "downloadFile": {
    "method": "GET",
    "path": "/files/{file_id}/content",
    "summary": "Returns the contents of the specified file."
  },
  "createFineTuningJob": {
    "method": "POST",
    "path": "/fine_tuning/jobs",
    "summary": "Creates a job that fine-tunes a specified model from a given dataset.\n\nResponse includes details of the enqueued job including job status and the name of the fine-tuned models once complete.\n\n[Learn more about fine-tuning](/docs/guides/fine-tuning)\n"
  },
  "listPaginatedFineTuningJobs": {
    "method": "GET",
    "path": "/fine_tuning/jobs",
    "summary": "List your organization's fine-tuning jobs\n"
  },
  "retrieveFineTuningJob": {
    "method": "GET",
    "path": "/fine_tuning/jobs/{fine_tuning_job_id}",
    "summary": "Get info about a fine-tuning job.\n\n[Learn more about fine-tuning](/docs/guides/fine-tuning)\n"
  },
  "listFineTuningEvents": {
    "method": "GET",
    "path": "/fine_tuning/jobs/{fine_tuning_job_id}/events",
    "summary": "Get status updates for a fine-tuning job.\n"
  },
  "cancelFineTuningJob": {
    "method": "POST",
    "path": "/fine_tuning/jobs/{fine_tuning_job_id}/cancel",
    "summary": "Immediately cancel a fine-tune job.\n"
  },
  "createFineTune": {
    "method": "POST",
    "path": "/fine-tunes",
    "summary": "Creates a job that fine-tunes a specified model from a given dataset.\n\nResponse includes details of the enqueued job including job status and the name of the fine-tuned models once complete.\n\n[Learn more about fine-tuning](/docs/guides/legacy-fine-tuning)\n"
  },
  "listFineTunes": {
    "method": "GET",
    "path": "/fine-tunes",
    "summary": "List your organization's fine-tuning jobs\n"
  },
  "retrieveFineTune": {
    "method": "GET",
    "path": "/fine-tunes/{fine_tune_id}",
    "summary": "Gets info about the fine-tune job.\n\n[Learn more about fine-tuning](/docs/guides/legacy-fine-tuning)\n"
  },
  "cancelFineTune": {
    "method": "POST",
    "path": "/fine-tunes/{fine_tune_id}/cancel",
    "summary": "Immediately cancel a fine-tune job.\n"
  },
  "listFineTuneEvents": {
    "method": "GET",
    "path": "/fine-tunes/{fine_tune_id}/events",
    "summary": "Get fine-grained status updates for a fine-tune job.\n"
  },
  "listModels": {
    "method": "GET",
    "path": "/models",
    "summary": "Lists the currently available models, and provides basic information about each one such as the owner and availability."
  },
  "retrieveModel": {
    "method": "GET",
    "path": "/models/{model}",
    "summary": "Retrieves a model instance, providing basic information about the model such as the owner and permissioning."
  },
  "deleteModel": {
    "method": "DELETE",
    "path": "/models/{model}",
    "summary": "Delete a fine-tuned model. You must have the Owner role in your organization to delete a model."
  },
  "createModeration": {
    "method": "POST",
    "path": "/moderations",
    "summary": "Classifies if text violates OpenAI's Content Policy"
  },
  "listAssistants": {
    "method": "GET",
    "path": "/assistants",
    "summary": "Returns a list of assistants."
  },
  "createAssistant": {
    "method": "POST",
    "path": "/assistants",
    "summary": "Create an assistant with a model and instructions."
  },
  "getAssistant": {
    "method": "GET",
    "path": "/assistants/{assistant_id}",
    "summary": "Retrieves an assistant."
  },
  "modifyAssistant": {
    "method": "POST",
    "path": "/assistants/{assistant_id}",
    "summary": "Modifies an assistant."
  },
  "deleteAssistant": {
    "method": "DELETE",
    "path": "/assistants/{assistant_id}",
    "summary": "Delete an assistant."
  },
  "createThread": {
    "method": "POST",
    "path": "/threads",
    "summary": "Create a thread."
  },
  "getThread": {
    "method": "GET",
    "path": "/threads/{thread_id}",
    "summary": "Retrieves a thread."
  },
  "modifyThread": {
    "method": "POST",
    "path": "/threads/{thread_id}",
    "summary": "Modifies a thread."
  },
  "deleteThread": {
    "method": "DELETE",
    "path": "/threads/{thread_id}",
    "summary": "Delete a thread."
  },
  "listMessages": {
    "method": "GET",
    "path": "/threads/{thread_id}/messages",
    "summary": "Returns a list of messages for a given thread."
  },
  "createMessage": {
    "method": "POST",
    "path": "/threads/{thread_id}/messages",
    "summary": "Create a message."
  },
  "getMessage": {
    "method": "GET",
    "path": "/threads/{thread_id}/messages/{message_id}",
    "summary": "Retrieve a message."
  },
  "modifyMessage": {
    "method": "POST",
    "path": "/threads/{thread_id}/messages/{message_id}",
    "summary": "Modifies a message."
  },
  "createThreadAndRun": {
    "method": "POST",
    "path": "/threads/runs",
    "summary": "Create a thread and run it in one request."
  },
  "listRuns": {
    "method": "GET",
    "path": "/threads/{thread_id}/runs",
    "summary": "Returns a list of runs belonging to a thread."
  },
  "createRun": {
    "method": "POST",
    "path": "/threads/{thread_id}/runs",
    "summary": "Create a run."
  },
  "getRun": {
    "method": "GET",
    "path": "/threads/{thread_id}/runs/{run_id}",
    "summary": "Retrieves a run."
  },
  "modifyRun": {
    "method": "POST",
    "path": "/threads/{thread_id}/runs/{run_id}",
    "summary": "Modifies a run."
  },
  "submitToolOuputsToRun": {
    "method": "POST",
    "path": "/threads/{thread_id}/runs/{run_id}/submit_tool_outputs",
    "summary": "When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.\n"
  },
  "cancelRun": {
    "method": "POST",
    "path": "/threads/{thread_id}/runs/{run_id}/cancel",
    "summary": "Cancels a run that is `in_progress`."
  },
  "listRunSteps": {
    "method": "GET",
    "path": "/threads/{thread_id}/runs/{run_id}/steps",
    "summary": "Returns a list of run steps belonging to a run."
  },
  "getRunStep": {
    "method": "GET",
    "path": "/threads/{thread_id}/runs/{run_id}/steps/{step_id}",
    "summary": "Retrieves a run step."
  },
  "listAssistantFiles": {
    "method": "GET",
    "path": "/assistants/{assistant_id}/files",
    "summary": "Returns a list of assistant files."
  },
  "createAssistantFile": {
    "method": "POST",
    "path": "/assistants/{assistant_id}/files",
    "summary": "Create an assistant file by attaching a [File](/docs/api-reference/files) to an [assistant](/docs/api-reference/assistants)."
  },
  "getAssistantFile": {
    "method": "GET",
    "path": "/assistants/{assistant_id}/files/{file_id}",
    "summary": "Retrieves an AssistantFile."
  },
  "deleteAssistantFile": {
    "method": "DELETE",
    "path": "/assistants/{assistant_id}/files/{file_id}",
    "summary": "Delete an assistant file."
  },
  "listMessageFiles": {
    "method": "GET",
    "path": "/threads/{thread_id}/messages/{message_id}/files",
    "summary": "Returns a list of message files."
  },
  "getMessageFile": {
    "method": "GET",
    "path": "/threads/{thread_id}/messages/{message_id}/files/{file_id}",
    "summary": "Retrieves a message file."
  }
}
